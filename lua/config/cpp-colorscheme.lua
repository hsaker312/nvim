vim.api.nvim_set_hl(0, "@variable.parameter.cpp", {})
-- vim.api.nvim_set_hl(0, "@lsp.type.unknown.cpp", { fg = "#abb984" })

vim.api.nvim_set_hl(0, "@lsp.mod.static.cpp", { italic = true })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.static.cpp", { italic = true })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.static.cpp", { italic = true })
vim.api.nvim_set_hl(0, "@lsp.typemod.function.globalScope.cpp", { underline = true })
vim.api.nvim_set_hl(0, "@lsp.typemod.variable.globalScope.cpp", { underline = true })
vim.api.nvim_set_hl(0, "@lsp.mod.readonly.cpp", { bold = true })

vim.api.nvim_set_hl(0, "@type.cpp", { fg = "#a50675" })
vim.api.nvim_set_hl(0, "@keyword.cpp", { fg = "#a50675" })
vim.api.nvim_set_hl(0, "@keyword.conditional.cpp", { fg = "#a50675" })
vim.api.nvim_set_hl(0, "@keyword.repeat.cpp", { fg = "#a50675" })
vim.api.nvim_set_hl(0, "@keyword.return.cpp", { fg = "#a50675" })
vim.api.nvim_set_hl(0, "@keyword.import.cpp", { fg = "#a50675", bold = true })
vim.api.nvim_set_hl(0, "@keyword.directive.cpp", { fg = "#a50675", bold = true })
vim.api.nvim_set_hl(0, "@keyword.directive.define.cpp", { fg = "#a50675", bold = true })
vim.api.nvim_set_hl(0, "@function.macro.cpp", { fg = "#a50675", bold = true })
vim.api.nvim_set_hl(0, "@type.builtin.cpp", { fg = "#9877d4" })
vim.api.nvim_set_hl(0, "@punctuation.delimiter.cpp", { fg = "#9877d4", bold = true })
vim.api.nvim_set_hl(0, "@punctuation.special.cpp", { fg = "#9877d4", bold = true })
vim.api.nvim_set_hl(0, "@variable.builtin.cpp", { fg = "#9877d4", italic = true })
vim.api.nvim_set_hl(0, "@boolean.cpp", { fg = "#9877d4", italic = true })
vim.api.nvim_set_hl(0, "@lsp.typemod.type.defaultLibrary.cpp", { fg = "#9877d4" })
vim.api.nvim_set_hl(0, "@keyword.storage.cpp", { fg = "#cf3389", bold = true })
vim.api.nvim_set_hl(0, "@keyword.storage.cpp", { fg = "#cf3389", bold = true })
vim.api.nvim_set_hl(0, "@type.qualifier.cpp", { fg = "#cf3389", bold = true })
vim.api.nvim_set_hl(0, "@operator.cpp", { fg = "#ff00aa", bold = true })
vim.api.nvim_set_hl(0, "@keyword.operator.cpp", { fg = "#ff00aa", bold = true })
vim.api.nvim_set_hl(0, "@lsp.type.operator.cpp", { fg = "#ff00aa", bold = true })

vim.api.nvim_set_hl(0, "@string.cpp", { fg = "#ff8800" })
vim.api.nvim_set_hl(0, "@number.cpp", { fg = "#ff8800", italic = true })
vim.api.nvim_set_hl(0, "@lsp.type.enumMember.cpp", { fg = "#ee5d4a", italic = true })

    vim.api.nvim_set_hl(0, "@lsp.type.macro.cpp", { fg = "#638a6c" })
vim.api.nvim_set_hl(0, "@lsp.type.namespace.cpp", { fg = "#a35bcf" })
vim.api.nvim_set_hl(0, "@lsp.type.type.cpp", { fg = "#bb6783" })
vim.api.nvim_set_hl(0, "@lsp.type.class.cpp", { fg = "#9e5a81" })
vim.api.nvim_set_hl(0, "@lsp.type.struct.cpp", { fg = "#9e5a81" })
vim.api.nvim_set_hl(0, "@lsp.type.enum.cpp", { fg = "#9e5a81", bold = true })

vim.api.nvim_set_hl(0, "@lsp.type.concept.cpp", { fg = "#8f3769", italic = true })
vim.api.nvim_set_hl(0, "@lsp.type.typeParameter.cpp", { fg = "#bb63c7", italic = true, bold = true })

vim.api.nvim_set_hl(0, "@lsp.type.variable.cpp", { fg = "#d99df2" })
vim.api.nvim_set_hl(0, "@lsp.type.property.cpp", { fg = "#a333cf" })
vim.api.nvim_set_hl(0, "@property.cpp", { fg = "#a333cf" })
vim.api.nvim_set_hl(0, "@lsp.type.parameter.cpp", { fg = "#c233cf" })

vim.api.nvim_set_hl(0, "@function.cpp", { fg = "#3fc6f3" })
vim.api.nvim_set_hl(0, "@lsp.type.function.cpp", { fg = "#3fc6f3" })
vim.api.nvim_set_hl(0, "@lsp.type.method.cpp", { fg = "#3fc6f3" })
vim.api.nvim_set_hl(0, "@function.call.cpp", { fg = "#3fc6f3" })
vim.api.nvim_set_hl(0, "@function.method.call.cpp", { fg = "#3fc6f3" })
vim.api.nvim_set_hl(0, "@lsp.typemod.function.defaultLibrary.cpp", { fg = "#3f87f3" })
